{"version":3,"sources":["components/Loader.jsx","components/Giphy.jsx","App.jsx","index.js"],"names":["Loader","className","Giphy","useState","data","setData","isLoading","setIsLoading","isError","setIsError","search","setSearch","show","setShow","gif","setGif","handleClose","useEffect","a","axios","params","api_key","limit","results","setTimeout","fetchData","showModal","id","findIndex","handleSubmit","event","preventDefault","q","role","renderError","value","onChange","target","type","placeholder","Button","onClick","variant","Modal","onHide","Header","closeButton","Title","title","Body","user","description","href","e","window","navigator","clipboard","writeText","bitly_url","embed_url","Footer","open","Row","xs","md","lg","map","el","Col","Card","Img","src","images","fixed_width","url","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6f8d63b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <i className=\"fas fa-spinner fa-4x fa-spin\"></i>\n        </div>\n    )\n};\n\nexport default Loader;","import React, { useEffect, useState } from 'react';\nimport Loader from './Loader';\nimport axios from 'axios';\nimport { Card, Row, Col, Button, Modal } from 'react-bootstrap';\n\nconst Giphy = () => {\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [search, setSearch] = useState('');\n    const [show, setShow] = useState(false);\n    const [gif, setGif] = useState(null);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n       const fetchData = async () => {\n           setIsError(false);\n           setIsLoading(true);\n\n           try {\n                const results = await axios('https://api.giphy.com/v1/gifs/trending', {\n                    params: {\n                        api_key: 'mTJ4fJICNLMJzaeOZjJL7ZA7RKMold3z',\n                        limit: 100,\n                    }\n                });\n                \n                setData(results.data.data);\n           } catch (ex) {\n               setIsError(true);\n\n               setTimeout(() => setIsError(false), 1000);\n           }\n\n           setIsLoading(false);\n       };\n\n       fetchData();\n    }, []);\n\n    const showModal = (id) => {\n        const gif = data[data.findIndex(gif => gif.id === id)];\n\n        setGif(gif);\n        handleShow();\n    }\n\n    const renderGifs = () => {\n        if (isLoading) {\n            return <Loader />\n        }\n\n        return (\n            <Row xs={2} md={3} lg={4} className=\"g-4\">\n                {data.map(el => (\n                    <Col key={el.id}>\n                        <Card>\n                            <Card.Img variant=\"top\" src={el.images.fixed_width.url} onClick={() => showModal(el.id)} />\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n        )\n    };\n\n    const renderError = () => {\n        if (isError) {\n            return (\n                <div className=\"alert alert-warning alert-dismissable fade show\" role=\"alert\">\n                    Unable to get Gifs, please try again\n                </div>\n            )\n        }\n    };\n\n    const handleSearchChange = (event) => {\n        setSearch(event.target.value);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        setIsError(false);\n        setIsLoading(true);\n\n        try {\n            const results = await axios('https://api.giphy.com/v1/gifs/search', {\n                params: {\n                    api_key: 'mTJ4fJICNLMJzaeOZjJL7ZA7RKMold3z',\n                    q: search,\n                    limit: 100,\n                }\n            });\n\n            setData(results.data.data);\n        } catch (ex) {\n            setIsError(true);\n            setTimeout(() => setIsError(false), 1000);\n        }\n        \n        setIsLoading(false);        \n    };\n\n    const copyGif = (e) => {\n        e.preventDefault();\n        window.navigator.clipboard.writeText(gif.bitly_url);\n        handleClose();\n    }\n\n    const viewGif = () => {\n        window.open(gif.bitly_url, '_blank', 'noopener,noreferrer');\n        handleClose();\n    }\n\n    return (\n        <div className=\"m-2\">\n            {renderError()}\n            <form className=\"form-inline justify-content-center m-2\">\n                <input \n                    value={search}\n                    onChange={handleSearchChange}\n                    type=\"text\" \n                    placeholder=\"search\" \n                    className=\"form-control\" \n                />\n                <Button \n                    type=\"submit\" \n                    onClick={handleSubmit}\n                    variant=\"primary\"\n                >Go\n                </Button>\n            </form>\n            {gif && \n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{gif.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>{gif.user && gif.user.description}</p>\n                        <p>Click to copy:</p> \n                        <p><a href=\"!#\" onClick={copyGif}>{gif.embed_url}</a></p>\n                    </Modal.Body>            \n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>Close Me</Button>\n                        <Button variant=\"secondary\" onClick={() => viewGif(gif.bitly_url)}>Click to view</Button> \n                    </Modal.Footer>\n                </Modal>\n            }\n            <div className=\"container gifs\">{renderGifs()}</div>\n        </div>\n    )\n};\n\nexport default Giphy;","import React from 'react';\nimport Giphy from './components/Giphy';\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst App = () => {\n    return (\n        <div>\n            <Giphy />\n        </div>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}